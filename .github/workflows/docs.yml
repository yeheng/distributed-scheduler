name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-docs-
            ${{ runner.os }}-cargo-

      - name: Generate documentation
        run: |
          cargo doc --workspace --all-features --no-deps
          echo "<meta http-equiv=\"refresh\" content=\"0; url=monitor_core\">" > target/doc/index.html

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          cname: monitor-docs.yourdomain.com  # Optional: replace with your domain

  doc-tests:
    name: Documentation Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-doctest-${{ hashFiles('**/Cargo.lock') }}

      - name: Run documentation tests
        run: cargo test --workspace --doc

  readme-sync:
    name: Sync README
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-readme
        run: cargo install cargo-readme

      - name: Generate README from lib.rs
        run: |
          cd crates/monitor-core
          cargo readme > README.md

      - name: Commit README changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add crates/monitor-core/README.md
          if git diff --staged --quiet; then
            echo "No changes to README.md"
          else
            git commit -m "docs: sync README.md from lib.rs documentation"
            git push
          fi

  api-docs:
    name: API Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
          key: ${{ runner.os }}-cargo-api-docs-${{ hashFiles('**/Cargo.lock') }}

      - name: Check for missing documentation
        run: |
          export RUSTDOCFLAGS="-D missing_docs -D rustdoc::missing_doc_code_examples"
          cargo doc --workspace --all-features --no-deps