# Staging 环境配置文件
# 继承 base.toml 的默认配置，提供类似生产环境的设置

[database]
# Staging 环境数据库连接
url = "postgresql://scheduler:${DB_PASSWORD}@db-staging.internal:5432/scheduler_staging?sslmode=require"
max_connections = 25
min_connections = 5
connection_timeout_seconds = 45
idle_timeout_seconds = 900

[message_queue]
# Redis Stream staging 配置
url = "redis://redis-staging.internal:6379"
max_retries = 5
retry_delay_seconds = 60
connection_timeout_seconds = 45

[message_queue.redis]
host = "redis-staging.internal"
connection_timeout_seconds = 45
max_retry_attempts = 5
retry_delay_seconds = 2
password = "${REDIS_PASSWORD}"

[dispatcher]
# Staging 环境调度器配置
schedule_interval_seconds = 15
max_concurrent_dispatches = 250
worker_timeout_seconds = 120
dispatch_strategy = "load_balancer"

[worker]
# Staging 环境 Worker 配置
enabled = true
worker_id = "${WORKER_ID:-staging-worker-001}"
hostname = "${HOSTNAME:-worker-staging}"
ip_address = "${WORKER_IP:-10.0.0.100}"
max_concurrent_tasks = 15
supported_task_types = ["shell", "http", "python"]
heartbeat_interval_seconds = 45
task_poll_interval_seconds = 8

[api]
# Staging API 配置
bind_address = "0.0.0.0:8443"
cors_origins = ["https://staging.example.com", "https://staging-api.example.com"]
request_timeout_seconds = 45
max_request_size_mb = 25

[api.auth]
# Staging 认证配置
enabled = true
jwt_secret = "${JWT_SECRET}"
jwt_expiration_hours = 12
jwt_refresh_expiration_hours = 48
issuer = "scheduler-system"
audience = "scheduler-api"

[api.rate_limiting]
# Staging 限流配置
enabled = true
max_requests_per_minute = 60

[observability]
# Staging 可观测性配置
log_level = "info"
jaeger_endpoint = "http://jaeger-staging.internal:14268/api/traces"